{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ahmed\\\\monester-rolodex\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport reactDom from 'react-dom';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monster: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => {});\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: this.state.monster.map(monster => /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: monster.name\n      }, monster.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/ahmed/monester-rolodex/src/App.js"],"names":["React","Component","reactDom","App","constructor","state","monster","componentDidMount","fetch","then","response","render","map","name","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,OAAO,WAAP;;;AACA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAC1BG,EAAAA,WAAW,GAAE;AACX;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AACHC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAI,CAAE,CADpB;AAED;;AAGCC,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBACC,KAAKN,KAAL,CAAWC,OAAX,CAAmBM,GAAnB,CAAuBN,OAAO,iBAC7B;AAAA,kBAAsBA,OAAO,CAACO;AAA9B,SAASP,OAAO,CAACQ,EAAjB;AAAA;AAAA;AAAA;AAAA,cADD;AADD;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAxByB;;AA2B5B,eAAeX,GAAf","sourcesContent":["import React, { Component} from 'react';\nimport reactDom from 'react-dom';\nimport logo from './logo.svg';\nimport './App.css';\nclass App extends Component {\n  constructor(){\n    super();\n\n    this.state = {\n      monster: []\n    }\n  }\ncomponentDidMount() {\n  fetch('https://jsonplaceholder.typicode.com/users')\n  .then(response => {})\n}\n\n\n  render(){\n    return (\n      <div className=\"App\">\n      {this.state.monster.map(monster => (\n        <h1 key={monster.id}>{monster.name}</h1>\n      ))}\n\n    </div>\n\n    );\n  }\n\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}