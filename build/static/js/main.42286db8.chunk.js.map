{"version":3,"sources":["components/card/card.components.jsx","components/card-list/card-list.components.jsx","components/search-box/search-box.components.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","CardList","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filterMonster","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAIaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UACTC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACH,6BAAKL,EAAMI,QAAQE,WCFdC,G,MAAW,SAAAP,GACpB,OACI,qBAAKC,UAAU,YAAf,SACGD,EAAMI,QAAQI,KAAI,SAAAJ,GAAO,OAC1B,cAAC,EAAD,CAAuBA,QAAUA,GAAtBA,EAAQC,WCNhBI,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACrB,uBACAV,UAAU,SACVW,KAAK,SACLF,YAAeA,EACfG,SAAUF,MCmCCG,G,wDAlCb,aAAc,IAAD,8BACX,gBAEKC,MAAQ,CACXX,QAAS,GACTY,YAAa,IALJ,E,qDAQf,WAAqB,IAAD,OAClBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAClB,QAASiB,S,oBAIvC,WAAS,IAAD,OACN,EAAgCE,KAAKR,MAA9BX,EAAP,EAAOA,QAASY,EAAhB,EAAgBA,YACVQ,EAAgBpB,EAAQqB,QAAO,SAAArB,GAAO,OAC1CA,EAAQE,KAAKoB,cAAcC,SAASX,EAAYU,kBAElD,OACE,sBAAKzB,UAAU,MAAf,UACA,iDACD,cAAC,EAAD,CACES,YAAc,iBACdC,aAAgB,SAAAiB,GAAC,OAAI,EAAKN,SAAS,CAACN,YAAaY,EAAEC,OAAOC,WAE5D,cAAC,EAAD,CAAU1B,QAAUoB,W,GA5BPO,cCGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.42286db8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.styles.css'\r\n\r\nexport const Card = props => (\r\n    <div className=\"card-container\">\r\n        <img alt='monster' \r\n        src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n        <h1>{props.monster.name}</h1>\r\n    </div>\r\n);","import React from 'react';\r\n\r\nimport { Card } from '../card/card.components';\r\n\r\nimport './card-list.styles.css'\r\n\r\nexport const CardList = props => {\r\n    return (\r\n        <div className=\"card-list\">\r\n          {props.monster.map(monster => (\r\n          <Card key={monster.id} monster ={monster} />\r\n          ))}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder,handleChange}) => (\r\n    <input \r\n    className=\"search\" \r\n    type=\"search\" \r\n    placeholder = {placeholder}\r\n    onChange={handleChange}\r\n    />\r\n);","import React, { Component} from 'react';\nimport reactDom from 'react-dom';\n\n\nimport {CardList} from './components/card-list/card-list.components';\n\nimport {SearchBox} from './components/search-box/search-box.components';\n\nimport './App.css';\nclass App extends Component {\n  constructor(){\n    super();\n\n    this.state = {\n      monster: [],\n      searchField: '',\n    }\n  }\ncomponentDidMount() {\n  fetch('https://jsonplaceholder.typicode.com/users')\n  .then(response => response.json())\n  .then(users => this.setState({monster: users}));\n}\n\n\n  render(){\n    const {monster, searchField } = this.state\n    const filterMonster = monster.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n      );\n    return (\n      <div className=\"App\">\n      <h1>Monster Rolodex</h1>\n     <SearchBox\n       placeholder = 'monster search'\n       handleChange = {e => this.setState({searchField: e.target.value})}\n     />\n     <CardList monster= {filterMonster} />\n    </div>\n\n    );\n  }\n\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}